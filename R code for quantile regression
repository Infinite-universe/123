install.packages('quantreg')
library(quantreg)
#加载quantreg包自带的数据集（考察食物支出与家庭收入之间关系的数据集）
data(engel)
engel
head(engel) #获取前六行数据
example(rq)  # 显示分位数回归函数rq()的一个简单示例代码

fit1 = rq(foodexp~income,tau=0.5,data=engel)
fit1
r1=resid(fit1)#残差序列
r1
c1=coef(fit1) # 模型的系数
c1
summary(fit1)

summary(fit1,se='boot') # 通过设置参数se,得到系数的假设检验

fit2 = rq(foodexp~income,tau=0.75,data=engel)
#方差分析
anova(fit1,fit2)

#画图比较
png(file = 'foodexp~income.png')
plot(engel$foodexp,engel$income,pch=20,col='black',
   main = '家庭收入与食品支出的分位数回归',xlab='食品支出',ylab='家庭收入')
lines(fitted(fit1),engel$income,lwd=2,col='blue')
lines(fitted(fit2),engel$income,lwd=2,col='red')
legend('topright',c('tau=.5','tau=0.75'),lty=c(1,1),col = c('blue','red'))
dev.off()

# 不同分位点的回归比较
fit = rq(foodexp~income,tau = c(0.05,0.25,0.5,0.75,0.95),data=engel)
plot(summary(fit))

#不同分位点拟合曲线的比较
attach(engel)  # 打开enger数据集，直接运行其中的列名，就可调用相应列
png(file='different quantile regression.png')
plot(income,foodexp,cex=0.25,type = 'n',xlab = 'Income',ylab ='Foodexp')
# type='n'表示初始化图形区域，但不画图。
points(income,foodexp,cex=0.5,col='blue') #添加点，点的大小为0.5
abline(rq(foodexp~income,tau = 0.5),col='blue')#中位数的拟合曲线
abline(lm(foodexp~income),lty=2,col='red')# 普通最小二乘法拟合曲线
taus=c(0.05,0.1,0.25,0.75,0.9,0.95)
for (i in 1:length(taus)){
  abline(rq(foodexp~income,tau = taus[i]),col='green')
  }
dev.off()
detach(engel)

#穷人和富人的消费分布比较
#比较穷人（收入在10%分位点的那个人）和富人（收入在90%分位点的那个人）的估计结果
# rq函数中，tau不在[0,1]时，表示按最细的分位点划分方式得到分位点序列
attach(engel)
png(file='poor rich.png')
z = rq(foodexp ~ income, tau=-1) 
z$sol     # 这里包含了每个分位点下的系数估计结果
x.poor = quantile(income, 0.1) # 10%分位点的收入
x.rich = quantile(income, 0.9) # 90%分位点的收入
ps = z$sol[1,]              # 每个分位点的tau值
qs.poor = c( c(1,x.poor) %*% z$sol[4:5,] )  # 10%分位点的收入的消费估计值
qs.rich = c( c(1,x.rich) %*% z$sol[4:5,] )   # 90%分位点的收入的消费估计值
par(mfrow=c(1,2))                 # 把绘图区域划分为一行两列
plot(c(ps,ps),c(qs.poor,qs.rich),type="n",     
     xlab=expression(tau), ylab="quantile")
plot(stepfun(ps,c(qs.poor[1],qs.poor)), do.points=F,
     add=T)
plot(stepfun(ps,c(qs.poor[1],qs.rich)), do.points=F,
     add=T, col.hor="gray", col.vert="gray")
ps.wts = ( c(0,diff(ps)) + c(diff(ps),0) )/2
ap = akj(qs.poor, z=qs.poor, p=ps.wts)
ar = akj(qs.rich, z=qs.rich, p=ps.wts)
plot(c(qs.poor,qs.rich), c(ap$dens, ar$dens),
     type="n", xlab="Food Expenditure", ylab="Density")
lines(qs.rich,ar$dens,col="gray")
lines(qs.poor,ap$dens,col="black")
legend("topright", c("poor","rich"), lty=c(1,1),
       col=c("black","gray"))
dev.off()
detach(engel)
